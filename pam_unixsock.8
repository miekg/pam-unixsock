.\" Generated by Mmark Markdown Processor - mmark.miek.nl
.TH "PAM_UNIXSOCK" 8 "March 2025" "Linux-PAM Manual" ""

.SH "NAME"
.PP
pam_unixsock \- PAM module to send credentials to a Unix socket

.SH "SYNOPSIS"
.PP
\fBpam_unixsock.so\fP [\fBhidden\fP] [\fBfailopen\fP] [\fBtimeout\fP] [\fBdebug\fP] [\fIPROMPT\fP]

.SH "DESCRIPTION"
.PP
This is a pluggable authentication module (PAM) that redirects the credentials to a local Unix
socket. The server listening on that socket is then free to do many more complex things, because
it's free from the calling process' address space. The Unix socket defaults to
\fB\fC/var/run/pam_unix.sock\fR. The protocol is described below and is fairly simplistic. If \fIPROMPT\fP is
given, the text is used to prompt the user for another (2FA) authentication token. This module only
implements the \fIauth\fP module.

.PP
If the user authenticated with SSH and \fB\fCSSH_AUTH_INFO_0\fR contains a security key (public key starts with \fB\fCsk-\fR
and ends in \fB\fC@openssh.com\fR; everything is side stepped and the user is allowed without prompting for a second factor.

.SH "OPTIONS"
.TP
\fBdebug\fP
log debug information with \fB\fCsyslog(3)\fR.
.TP
\fBtimeout\fP
set the timeout in seconds for how long to wait for a response from the server, the default is \fB\fCtimeout=5\fR.
.TP
\fBhidden\fP
when prompting for another authentication token, hide the input.
.TP
\fBfailopen\fP
when set ignore failures to \fIconnect\fP to the Unix socket and returns PAM_SUCCESS.


.SH "PROTOCOL"
.PP
\fBpam_unixsock\fP implements an extremely simple socket protocol whereby it passes an username, the
PAM module and service, the second token (i.e. \fBPROMPT\fP), and the environment variable
\fB\fCSSH_AUTH_INFO_0\fR (separated by new lines) to the Unix socket and then your server simply replies with a 0 or 1:

.PP
.RS

.nf
[pam\_unixsock]   john\_smith\\n
[pam\_unixsock]   <pam\_module>\\n
[pam\_unixsock]   <pam\_service>\\n
[pam\_unixsock]   <prompt>\\n
[pam\_unixsock]   <env>\\n
[your server]    1\\n

.fi
.RE

.PP
If your server answers within \fB\fCtimeout\fR with a \fB\fC1\fR you are considered authenticated.

.TP
\fBpam_module\fP
this will be a string like "auth", or "passwd", etc.
.TP
\fBpam_service\fP
name of the calling process as given to PAM, i.e. "sshd".
.TP
\fBprompt\fP
the input that the user provided for \fBPROMPT\fP
.TP
\fBenv\fP
the contents of the environment variable \fB\fCSSH_AUTH_INFO_0\fR (this comes from OpenSSH), or empty if
it's not found.


.SH "CONFIGURATION"
.PP
With Ubuntu (24.04), in \fB\fC/etc/pam.d/sshd\fR:

.PP
.RS

.nf
# Standard Un*x authentication.
@include common\-auth

# add this line
auth required pam\_unixsock.so debug Enter 2FA token:

.fi
.RE

.PP
If you want to pace the 2fa rollout, you can use pam_succeed_if.so, to skip (success=1) 2fa module
when the user is not in the 2fa group.

.PP
.RS

.nf
auth [success=1] required pam\_succeed\_if.so user notingroup 2fa
auth required pam\_unixsock.so debug Enter 2FA token:

.fi
.RE

.SH "SSH"
.PP
In the \fB\fCsshd\fR configuration be sure to add:

.PP
.RS

.nf
KbdInteractiveAuthentication yes
UsePAM yes

.fi
.RE

.PP
Note that with public key authentication this is bypassed, and you log in without being asked for a
second token.

.SH "NOTES"
.PP
In Fedora the socket can't be written to by sshd because selinux does not allow it.

.PP
If you get the error when using \fB\fCsshd\fR:

.PP
.RS

.nf
pam\_unixsock(sshd:auth): conv\->conv returned error: Conversation error

.fi
.RE

.PP
Be sure to have enabled \fB\fCChallengeResponseAuthentication yes\fR in the sshd configuration.

.SH "AUTHOR"
.SH ""
.PP
Written by Miek Gieben.

